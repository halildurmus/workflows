name: Prepare Release Workflow

on:
  workflow_call:
    inputs:
      dart_sdk:
        required: false
        type: string
        default: stable
      dry_run:
        required: false
        type: boolean
        default: false
      update_changelog_args:
        required: false
        type: string
        default: ''
      working_directory:
        required: false
        type: string
        default: '.'
    secrets:
      token:
        required: true

jobs:
  prepare-release:
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🎯 Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.dart_sdk }}

      - name: 📦 Install Dependencies
        run: dart pub get

      - name: 📦 Install git-cliff
        run: |
          if ! command -v git-cliff &> /dev/null; then
            curl -L -o git-cliff.tar.gz https://github.com/orhun/git-cliff/releases/download/v2.6.1/git-cliff-2.6.1-x86_64-unknown-linux-gnu.tar.gz
            sudo tar -xf git-cliff.tar.gz --strip-components=1 -C /usr/local/bin
            rm git-cliff.tar.gz
          fi
          git-cliff --version

      - name: 🔼 Bump Version
        run: |
          dart run hooks:bump_version
          echo "next_version=$(grep '^version:' pubspec.yaml | head -n 1 | awk '{print $2}')" >> $GITHUB_ENV

      - name: 📝 Update CHANGELOG
        run: dart run hooks:update_changelog --tag v${{ env.next_version }} ${{ inputs.update_changelog_args }}

      - name: 📜 Commit Changes
        if: ${{ !inputs.dry_run }}
        run: |
          git config user.name "Halil Durmus"
          git config user.email "durmushalil@proton.me"
          git add CHANGELOG.md pubspec.yaml
          git commit -m "chore(release): v${next_version}"

      - name: 🚀 Create Release Pull Request
        if: ${{ !inputs.dry_run }}
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.token }}
          commit-message: 'chore(release): v${{ env.next_version }}'
          branch: release-${{ env.next_version }}
          title: 'chore(release): v${{ env.next_version }}'
          body: This PR prepares the release of version `v${{ env.next_version }}`.
          labels: release
